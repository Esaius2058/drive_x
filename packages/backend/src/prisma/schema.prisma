generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id @default(uuid())
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id           Int          @id @default(autoincrement())
  name         String
  email        String       @unique
  passwordHash String       @map("password_hash")
  storageLimit Int          @map("storage_limit")
  usedStorage  Int          @map("used_storage")
  createdAt    DateTime     @default(now()) @map("created_at")

  files        FileMetadata[]
  folders      Folder[]
  activityLogs FileLog[]
}

model FileMetadata {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @map("user_id")

  folder      Folder?   @relation(fields: [folderId], references: [id], onDelete: SetNull)
  folderId    Int?      @map("folder_id")

  name        String
  storedName  String    @map("stored_name")
  size        Int
  type        String    @map("type")
  storagePath String    @map("storage_path")
  path        String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  isShared    Boolean   @default(false) @map("is_shared")
  isDeleted   Boolean   @default(false) @map("is_deleted")

  logs        FileLog[]
}

model Folder {
  id             Int       @id @default(autoincrement())
  user           User      @relation(fields: [userId], references: [id])
  userId         Int       @map("user_id")

  parentFolder   Folder?   @relation("FolderHierarchy", fields: [parentFolderId], references: [id], onDelete: SetNull)
  parentFolderId Int?      @map("parent_id")
  childFolders   Folder[]  @relation("FolderHierarchy") // ðŸ‘ˆ THIS is the fix

  name           String
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  files          FileMetadata[]
}


model FileLog {
  id         Int          @id @default(autoincrement())
  user       User         @relation(fields: [userId], references: [id])
  userId     Int          @map("user_id")

  file       FileMetadata @relation(fields: [fileId], references: [id])
  fileId     Int          @map("file_id")

  actionType String       @map("action")
  oldValue   Json         @map("old_value")
  newValue   Json         @map("new_value")
  insertedAt DateTime     @map("time_stamp")
}
